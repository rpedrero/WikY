@model ArticleViewModel

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
}

<div id="delete-article-modal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete article</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this article?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="deleteArticle()">Yes</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<p><a class="btn btn-secondary" asp-action="Index" role="button">Back to list</a></p>
<p>
    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id" role="button">Edit article</a>
    <button class="btn btn-danger" asp-action="" asp-route-id="@Model.Id" role="button" data-bs-toggle="modal" data-bs-target="#delete-article-modal">Delete article</button>
</p>

<h1>@Model.Topic</h1>

<p>Created on @Model.DateCreated.ToShortDateString() at @Model.DateCreated.ToShortTimeString() by @Model.Author</p>
<p>Last modification: @Model.DateModified.ToShortDateString() at @Model.DateModified.ToShortTimeString()</p>

<hr />

<p>
    @Model.Content
</p>

<hr />

<p>
    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id" role="button">Edit article</a>
    <button class="btn btn-danger" role="button" data-bs-toggle="modal" data-bs-target="#delete-article-modal">Delete article</button>
</p>
<p><a class="btn btn-secondary" asp-action="Index" role="button">Back to list</a></p>

<hr />

<h3>Comments</h3>

<p>
    <a class="btn btn-primary" asp-controller="Comment" asp-action="CreateForArticle" asp-route-id="@Model.Id" role="button">New comment</a>
</p>

<h3>Create a comment</h3>

<partial name="_CommentCreateForm" model="@(new CommentCreateViewModel { ArticleId = Model.Id })" />

<hr />

<h3>Create a comment (AJAX version)</h3>

<div class="alert alert-danger hidden" role="alert">
    <p id="ajax-form-error-placeholder"></p>
</div>

<form action="Comment/CreateForArticle" id="create-comment-ajaxversion-form">
    <p>
        <label for="ajax-author">
            <span>Author </span>
            <span aria-label="required">*</span>
            <span> :</span>
        </label>
        <input name="ajax-author" id="ajax-author-input" />
    </p>
    <p>
        <label for="ajax-content">
            <span>Content </span>
            <span aria-label="required">*</span>
            <span> :</span>
        </label>
        <textarea name="ajax-content" id="ajax-content-input"></textarea>
    </p>
    <p>
        <button class="btn btn-primary" type="submit" id="ajax-submit-button">Submit</button>
    </p>
</form>

<hr />

<div id="article-comments">
    @if (Model.Comments.Count > 0)
    {
        foreach (CommentViewModel comment in Model.Comments.OrderByDescending(c => c.DateCreated))
        {
            <partial name="_Comment" model="comment" />
        }
    }
    else
    {
        <p id="no-comment">No comment for now on this article.</p>
    }
</div>

<script>
    function deleteArticle() {
        window.location.href = '/Article/Delete/@Model.Id';
    }

    let authorInputElement = $('#ajax-author-input');
    let contentInputElement = $('#ajax-content-input');

    $('#create-comment-ajaxversion-form').submit(function (e) {
        e.preventDefault();

        $.post('/Comment/CreateAjax',
            {
                ArticleId: @Model.Id,
                Author: authorInputElement.val(),
                Content: contentInputElement.val()
            },
            function (data) {
                let noCommentTextElement = $('#no-comment');
                if (noCommentTextElement) {
                    noCommentTextElement.remove();
                }

                $('#article-comments').prepend(data);

                authorInputElement.val(null);
                contentInputElement.val(null);
            })
            .fail(function (response) {
                console.log(response);
            });
    });
</script>
