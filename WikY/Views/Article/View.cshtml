@using WikY.Models.Article
@using WikY.Models.Comment
@model ArticleViewModel

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
}

<div id="delete-article-modal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete article</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this article?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="deleteArticle()">Yes</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<div id="delete-comment-modal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete article</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this comment?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="deleteComment()">Yes</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<div id="delete-comment-ajax-modal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete article</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this comment?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="deleteCommentAjax()">Yes</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<p><a class="btn btn-secondary" asp-action="Index" role="button">Back to list</a></p>
<p>
    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id" role="button">Edit article</a>
    <button class="btn btn-danger" asp-action="" asp-route-id="@Model.Id" role="button" data-bs-toggle="modal" data-bs-target="#delete-article-modal">Delete article</button>
</p>

<partial name="_ArticleView" model="Model" />

<hr />

<p>
    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id" role="button">Edit article</a>
    <button class="btn btn-danger" role="button" data-bs-toggle="modal" data-bs-target="#delete-article-modal">Delete article</button>
</p>
<p><a class="btn btn-secondary" asp-action="Index" role="button">Back to list</a></p>

<hr />

<h3>Comments</h3>

<p>
    <a class="btn btn-primary" asp-controller="Comment" asp-action="CreateForArticle" asp-route-id="@Model.Id" role="button">New comment</a>
</p>

<h3>Create a comment</h3>

<partial name="_CommentCreateForm" model="@(new CommentCreateViewModel { ArticleId = Model.Id })" />

<hr />

<h3>Create a comment (AJAX version)</h3>

<div class="alert alert-danger hidden" id="ajax-global-form-error-placeholder" role="alert">
</div>

<form action="Comment/CreateForArticle" id="create-comment-ajaxversion-form">
    <p>
        <label for="ajax-author">
            <span>Author </span>
            <span aria-label="required">*</span>
            <span> :</span>
        </label>
        <input name="ajax-author" id="ajax-author-input" />
        <br/>
        <span class="validation-error hidden" id="ajax-author-validation"></span>
    </p>
    <p>
        <label for="ajax-content">
            <span>Content </span>
            <span aria-label="required">*</span>
            <span> :</span>
        </label>
        <textarea name="ajax-content" id="ajax-content-input"></textarea>
        <br />
        <span class="validation-error" id="ajax-content-validation"></span>
    </p>
    <p>
        <button class="btn btn-primary" type="submit" id="ajax-submit-button">Submit</button>
    </p>
</form>

<hr />

<div id="article-comments">
    @if (Model.Comments.Count > 0)
    {
        foreach (CommentViewModel comment in Model.Comments.OrderByDescending(c => c.DateCreated))
        {
            <partial name="_Comment" model="comment" />
        }
    }
    else
    {
        <p id="no-comment">No comment for now on this article.</p>
    }
</div>

<script>
    let commentDeleteModal = new bootstrap.Modal(document.getElementById('delete-comment-modal'), {
        keyboard: false
    });

    let commentDeleteAjaxModal = new bootstrap.Modal(document.getElementById('delete-comment-ajax-modal'), {
        keyboard: false
    });

    let selectedCommentId = null;

    function unselectCurrentComment() {
        selectedCommentId = null;
    }

    function deleteArticle() {
        window.location.href = '/Article/Delete/@Model.Id';
    }

    function deleteComment() {
        window.location.href = '/Comment/Delete/' + selectedCommentId;
    }

    function deleteCommentAjax() {
        $.ajax({
            url: '/Comment/DeleteAjax/' + selectedCommentId,
            type: 'DELETE',
            success: function (result) {
                $('#comment-' + selectedCommentId).remove();
            },
        }).done(function () {
            unselectCurrentComment();
        });
    }

    function onCommentDeleteButton(commentId) {
        selectedCommentId = commentId;

        commentDeleteModal.show();
    }

    function onCommentAjaxDeleteButton(commentId) {
        selectedCommentId = commentId;

        commentDeleteAjaxModal.show();
    }

    let globalFormErrorElement = $('#ajax-global-form-error-placeholder');

    let authorInputElement = $('#ajax-author-input');
    let contentInputElement = $('#ajax-content-input');

    let ajaxAuthorValidationElement = $('#ajax-author-validation');
    let ajaxContentValidationElement = $('#ajax-content-validation');

    $('#create-comment-ajaxversion-form').submit(function (e) {
        e.preventDefault();

        $.post('/Comment/CreateAjax',
            {
                ArticleId: @Model.Id,
                Author: authorInputElement.val(),
                Content: contentInputElement.val()
            },
            function (data) {
                let noCommentTextElement = $('#no-comment');
                if (noCommentTextElement) {
                    noCommentTextElement.remove();
                }

                $('#article-comments').prepend(data);

                authorInputElement.val(null);
                contentInputElement.val(null);

                globalFormErrorElement.children().remove();
                globalFormErrorElement.addClass('hidden');
            })
            .fail(function (response) {
                if (response.status === 400) {
                    let responseJSON = response.responseJSON;

                    if (responseJSON['Author']) {
                        ajaxAuthorValidationElement.text(responseJSON['Author']);
                        ajaxAuthorValidationElement.removeClass('hidden');
                    }

                    if (responseJSON['Content']) {
                        ajaxContentValidationElement.text(responseJSON['Content']);
                        ajaxContentValidationElement.removeClass('hidden');
                    }
                }
                else if (response.status === 500) {
                    globalFormErrorElement.append('<p>An unexpected error has occurred when attempting to send your comment. Try again later.</p>');
                    globalFormErrorElement.removeClass('hidden');
                }
            });
    });

    authorInputElement.on('input', function (e) {
        if (!e.target.value.trim()) {
            ajaxAuthorValidationElement.text('The Author field is required.');
            ajaxAuthorValidationElement.removeClass('hidden');
        }
        else {
            ajaxAuthorValidationElement.text(null);
            ajaxAuthorValidationElement.addClass('hidden');
        }

        if(e.target.value.length > 30) {
            ajaxAuthorValidationElement.text('The field Author must be a string or array type with a maximum length of \'30\'.');
            ajaxAuthorValidationElement.removeClass('hidden');
        }
        else {
            ajaxAuthorValidationElement.text(null);
            ajaxAuthorValidationElement.addClass('hidden');
        }
    });

    contentInputElement.on('input', function (e) {
        if (!e.target.value.trim()) {
            ajaxContentValidationElement.text('The Content field is required.');
            ajaxContentValidationElement.removeClass('hidden');
        }
        else {
            ajaxContentValidationElement.text(null);
            ajaxContentValidationElement.addClass('hidden');
        }
    });
</script>
